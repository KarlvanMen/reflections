cd ~                          # change directories to your home directory
mkdir version-control         # make version-control directory
cd version-control            # go to version-control directory
mkdir reflections             # create reflections directory
cd reflections                # go to reflections directory
subl lesson_1_reflections.txt # launch sublime with file called lesson_1_reflections.txt (you can replace subl with another editor here if you prefer a different one)
pwd # print working directory - shows what directory you are in
ls  # list the files in this directory



How did viewing a diff between two versions of a file help you see the bug that was introduced?

Located the changed lines, so the search for potential error was downsized



How could having easy access to the entire history of a file make you a more efficient programmer in the long term?

Once I need to find something that used to work, but now isn't, Ican easily reffer back.



What do you think are the pros and cons of manually choosing when to create a commit, like you do in Git, vs having versions automatically saved, like Google Docs does?

Pros: you can sav only when necessary
Cons: human error



Why do you think some version control systems, like Git, allow saving multiple files in one commit, while others, like Google Docs, treat each file separately?

In order for the user to have more understanding of the wage of the change



How can you use the commands git log and git diff to view the history of files?

log prints out all the changes made
diff prints out the changes between the changes



How might using version control make you more confident to make changes that could break something?

I could easily revert to safe zone



Now that you have your workspace set up, what do you want to try using Git for?

Learning how to make webpages work offline